import { ResourcePage as Page } from '../types';
import { CreateDatabasePayload, Database, DatabaseBackup, DatabaseConnection, DatabaseType, UpdateDatabasePayload } from './types';
/**
 * getDatabases
 *
 * Return a paginated list of managed databases on this account.
 *
 */
export declare const getDatabases: (params?: any, filters?: any) => Promise<Page<Database>>;
/**
 * getDatabase
 *
 * Return detailed information about a single database
 *
 */
export declare const getDatabase: (databaseID: number) => Promise<Database>;
/**
 * getDatabaseConnection
 *
 * Return connection information (host and port) for a database
 *
 */
export declare const getDatabaseConnection: (databaseID: number) => Promise<DatabaseConnection>;
/**
 * getDatabaseBackups
 *
 * Return backups information for a database
 *
 */
export declare const getDatabaseBackups: (databaseID: number) => Promise<Page<DatabaseBackup>>;
/**
 * getMySQLTypes
 *
 * Return a paginated list of available plans/types for MySQL databases
 *
 */
export declare const getMySQLTypes: (params?: any, filters?: any) => Promise<Page<DatabaseType>>;
/**
 * createDatabase
 *
 * Create a new MySQL database in the specified region.
 *
 */
export declare const createDatabase: (data: CreateDatabasePayload) => Promise<Database>;
/**
 * updateDatabase
 *
 * Update the label, tags, or maintenance schedule of an
 * existing database
 *
 */
export declare const updateDatabase: (databaseID: number, data: UpdateDatabasePayload) => Promise<Database>;
/**
 * deleteDatabase
 *
 * Delete a single database
 */
export declare const deleteDatabase: (databaseID: number) => Promise<{}>;
/**
 * resetDatabasePassword
 *
 * Resets the root password for a database
 */
export declare const resetPassword: (databaseID: number, root_password: string) => Promise<{}>;
