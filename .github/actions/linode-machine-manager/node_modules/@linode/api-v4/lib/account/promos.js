"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addPromotion = void 0;

var _account = require("@linode/validation/lib/account.schema");

var _constants = require("../constants");

var _request = _interopRequireWildcard(require("../request"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * addPromotion
 *
 * Add an expiring credit (promotion) to an existing account.
 * This is only possible if:
 * - The user is unrestricted
 * - The account is fewer than 90 days old
 * - No promotions are currently active on the account
 * - The code is a valid expiring credit (it has not expired, but will at some point)
 */
const addPromotion = code => (0, _request.default)((0, _request.setURL)(`${_constants.API_ROOT}/account/promo-codes`), (0, _request.setMethod)('POST'), (0, _request.setData)({
  promo_code: code
}, _account.PromoCodeSchema));

exports.addPromotion = addPromotion;